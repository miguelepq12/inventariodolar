plugins {
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "org.sonarqube" version "3.0"
    id 'jacoco'
    id 'java'
}

group = 'com.apweif.app'
version = '0.0.4'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR8")
}


sourceSets {
    integrationtest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationtest/java')
        }
        resources.srcDir file('src/integrationtest/resources')
    }
}

task integrationtest(type: Test) {
    testClassesDirs = sourceSets.integrationtest.output.classesDirs
    classpath = sourceSets.integrationtest.runtimeClasspath
}

configurations {
    integrationtestCompile.extendsFrom testCompile
    integrationtestRuntime.extendsFrom testRuntime
    integrationtestImplementation.extendsFrom testImplementation
}

check.dependsOn integrationtest
integrationtest.mustRunAfter test

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    integrationtestCompile "org.concordion:concordion:+"
    implementation 'org.springframework.boot:spring-boot-starter-validation'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

integrationtest{
    testLogging.showStandardStreams = true   // display test output on console
    systemProperties['concordion.output.dir'] = "$reporting.baseDir/spec"  // write output to build/reports/spec
    outputs.upToDateWhen { false }   // force tests to run even if code hasn't changed
}

sonarqube {
    properties {
        property "sonar.projectKey", "miguelepq12_inventariodolar"
        property "sonar.organization", "miguelepq12"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

tasks['sonarqube'].dependsOn test
tasks['sonarqube'].dependsOn integrationtest

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
